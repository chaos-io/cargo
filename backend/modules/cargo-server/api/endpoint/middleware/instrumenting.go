// Code generated by fino2. DO NOT EDIT.
// Rerunning fino will overwrite this file.
// Version: v0.1.0
// Version Date: 2025-10-08T20:15:43.419+08:00

package middleware

import (
	"github.com/chaos-io/gokit/middleware"

	// this service api
	"github.com/chaos-io/cargo/backend/modules/cargo-server/api/endpoint"
	"github.com/chaos-io/cargo/backend/modules/cargo-server/infra/metrics"
)

func wrapInstrumenting(in endpoint.Endpoints, options map[string]any) {
	count := metrics.NewCount()
	latency := metrics.NewLatency()
	if count == nil || latency == nil {
		return
	}

	in.GetCargoEndpoint = middleware.Instrumenting(latency.With("method", "GetCargo"), count.With("method", "GetCargo"))(in.GetCargoEndpoint)
	in.CreateCargoEndpoint = middleware.Instrumenting(latency.With("method", "CreateCargo"), count.With("method", "CreateCargo"))(in.CreateCargoEndpoint)
	in.HandingEventEndpoint = middleware.Instrumenting(latency.With("method", "HandingEvent"), count.With("method", "HandingEvent"))(in.HandingEventEndpoint)
}
